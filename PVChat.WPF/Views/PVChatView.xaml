<UserControl
    x:Class="PVChat.WPF.Views.PVChatView"
    xmlns:emoji="clr-namespace:Emoji.Wpf;assembly=Emoji.Wpf"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:utils="clr-namespace:PVChat.WPF.Utils"
    xmlns:helpers="clr-namespace:PVChat.WPF.Helpers"
    xmlns:vm="clr-namespace:PVChat.WPF.ViewModels"
    xmlns:convert="clr-namespace:PVChat.WPF.Converter"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    d:DesignHeight="600"
    d:DesignWidth="800"
    FontSize="18"
    
    mc:Ignorable="d">

    

    <UserControl.Resources>
        <FontFamily x:Key="Font" >/Fonts/#Segoe UI Emoji</FontFamily>
        <materialDesign:PackIcon x:Key="SendIcon" Kind="Send" />
        <convert:StringToBoolConverter x:Key="StringToBoolConverter" />
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

        <Style x:Key="MessageBoxStyle" TargetType="{x:Type RichTextBox}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="MaxWidth" Value="400" />
        </Style>

        <Style x:Key="ParticipantsListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" 
                    Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" 
                    Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="2,0,0,0"/>
            <Setter Property="Margin" Value="2,0,2,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}" 
                                CornerRadius="10"
                                SnapsToDevicePixels="true">
                            <ContentPresenter Grid.Column="1"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="#d4d4d4"/>
                                <Setter Property="Foreground" 
                                        Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="#d4d4d4"/>
                                <Setter Property="Foreground" 
                                        Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                            </MultiTrigger>
                            
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                            
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#e6e6e6" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="SendButtonStyle" TargetType="Button" >
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Width" Value="50" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="IsEnabled" Value="False" />
            <Setter Property="Template" >
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="SendBd"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}" 
                                CornerRadius="10"
                                SnapsToDevicePixels="true" >
                            <ContentPresenter 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="True">
                    <Setter Property="Background" Value="#b8b8b8" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#cfcfcf" />
                    <Setter Property="Cursor" Value="Hand" />
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <DataTemplate x:Key="ParticipantsDataTemplate">
            <!--Border on the bottom of the participants-->
            <Border 
                Width="{Binding Path=ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}}"
                Height="50"
                Padding="0,0,15,0"
                BorderBrush="Gray"
                Margin="-2,0,0,0"
                BorderThickness="0">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="5" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>


                    <TextBlock
                        
                        Grid.Row="0"
                        Grid.Column="1"
                        Margin="3"
                        VerticalAlignment="Center"
                        TextTrimming="CharacterEllipsis" >
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{}{0} {1}">
                                <Binding Path="Name" />
                                <Binding Path="DatabaseName" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>

                    <materialDesign:PackIcon
                        Name="NewMessage"
                        Margin="5"
                        Grid.Row="0"
                        Grid.Column="2"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Kind="MessageReplyText"
                        Opacity="0.7"
                        SnapsToDevicePixels="True"
                        Visibility="Hidden" />
                    
                    <Ellipse
                        Grid.Row="0"
                        Grid.Column="3"
                        Width="8"
                        Height="8"
                        Margin="5"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center">
                        <Ellipse.Style>
                            <Style TargetType="Ellipse">
                                <Setter Property="Fill" Value="#a1a1a1" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Online}" Value="True">
                                        <Setter Property="Fill" Value="#4CCA75" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Ellipse.Style>
                    </Ellipse>
                </Grid>
            </Border>

            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Unread}" Value="True">
                    <Setter TargetName="NewMessage" Property="Visibility" Value="Visible" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <DataTemplate x:Key="MessagesDataTemplate">
            <Border
                Name="MessageBorder"
                MinWidth="100"
                MinHeight="40"
                Margin="10,0,60,10"
                HorizontalAlignment="Left"
                Background="#d4d4d4"
                CornerRadius="8,8,8,0"
                SnapsToDevicePixels="True">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    
                    <RichTextBox
                        x:Name="MessageBox"
                        IsDocumentEnabled="True"
                        Style="{StaticResource MessageBoxStyle}"
                        Grid.Row="0"
                        Grid.ColumnSpan="3"
                        Padding="5,2,5,0"
                        IsReadOnly="True"
                        Cursor="Arrow"
                        helpers:TextBlockHyperLinkHelper.Text="{Binding Message}"
                         />
                    

                    <!--Text="{Binding Message}"-->
                    <!--helpers:TextBlockHyperLinkHelper.Text="{Binding Message}"-->
                    <materialDesign:PackIcon 
                        Name="Read"
                        Grid.Row="1"
                        Grid.Column="2"
                        VerticalAlignment="Bottom"
                        Margin="2"
                        Kind="CheckAll"
                        Width="13"
                        Height="13"
                        Foreground="Blue"
                        Visibility="Hidden"
                        />
                    <materialDesign:PackIcon
                        Name="Sent"
                        Grid.Row="1"
                        Grid.Column="2"
                        Margin="2"
                        Width="13"
                        Height="13"
                        Kind="Check"
                        Visibility="Hidden"
                        />
                    <materialDesign:PackIcon
                        Name="Delivered"
                        Grid.Row="1"
                        Grid.Column="2"
                        Margin="2"
                        FontSize="5"
                        Width="13"
                        Height="13"
                        Kind="CheckAll"
                        Visibility="Hidden"
                        />
                    <TextBlock
                        Grid.Row="1"
                        Grid.Column="1"
                        FontSize="13"
                        Margin="0,0,0,1"
                        VerticalAlignment="Bottom"
                        Text="{Binding CreatedTime, StringFormat={}{0:t}}" />
                </Grid>
            </Border>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding IsOriginNative}" Value="True">
                    <Setter TargetName="MessageBorder" Property="HorizontalAlignment" Value="Right" />
                    <Setter TargetName="MessageBorder" Property="Margin" Value="60,0,10,10"/>
                    <Setter TargetName="MessageBorder" Property="Background" Value="#9cc7f1" />
                    <Setter TargetName="MessageBorder" Property="CornerRadius" Value="8,8,0,8" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Status}" Value="Sent">
                    <Setter TargetName="Read" Property="Visibility" Value="Hidden" />
                    <Setter TargetName="Sent" Property="Visibility" Value="Visible" />
                    <Setter TargetName="Delivered" Property="Visibility" Value="Hidden" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Status}" Value="Delivered">
                    <Setter TargetName="Read" Property="Visibility" Value="Hidden" />
                    <Setter TargetName="Sent" Property="Visibility" Value="Hidden" />
                    <Setter TargetName="Delivered" Property="Visibility" Value="Visible" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Unread}" Value="False">
                    <Setter TargetName="Read" Property="Visibility" Value="Visible" />
                    <Setter TargetName="Sent" Property="Visibility" Value="Hidden" />
                    <Setter TargetName="Delivered" Property="Visibility" Value="Hidden" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="100" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200" MinWidth="150" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <!--  Header -->
            <Border 
            Grid.Row="0"
            Grid.Column="0"
            >
                
                <Image Source="/Images/logo-placeholder.png" Stretch="Uniform" />
            </Border>
                <!--participant name-->
            <Border
                BorderThickness="0,0,0,1"
                BorderBrush="Gray"
                Grid.Row="0"
                Grid.Column="1"
                Padding="20,0,0,0">

                <TextBlock 
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                FontSize="24"
                Text="{Binding SelectedParticipant.Name, StringFormat='@ {0}'}" >
                </TextBlock>
            </Border>


            <!--  Participants Listing  -->
            <Border
                Grid.Row="1"
                Grid.Column="0"
                Margin="0,0,0,0"
                BorderThickness="0"
                SnapsToDevicePixels="True">
                <ListBox
                    BorderThickness="0"
                    Background="#f3f3f3"
                    ItemTemplate="{DynamicResource ParticipantsDataTemplate}"
                    ItemsSource="{Binding Participants}"
                    ItemContainerStyle="{DynamicResource ParticipantsListBoxItemStyle}"
                    ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                    ScrollViewer.VerticalScrollBarVisibility="Auto"
                    SelectedItem="{Binding SelectedParticipant}" />
            </Border>

            <!--User Name-->
            <Border
                Grid.Row="2"
                Grid.Column="0"
                Padding="20"
                Background="#d9d9d9"
                Margin="0,0,0,0"
                BorderThickness="0"
                SnapsToDevicePixels="True"
                >
                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding Name}" />
            </Border>

            <!--  Messages Listing  -->

            <ItemsControl
                x:Name="MessagesItemsCtrl"
                Grid.Row="1"
                Grid.Column="1"
                Margin="10,20,10,20"
                ItemTemplate="{DynamicResource MessagesDataTemplate}"
                ItemsSource="{Binding SelectedParticipant.Messages}"
                ScrollViewer.VerticalScrollBarVisibility="Auto">
                <i:Interaction.Behaviors>
                    <utils:BringNewItemIntoViewBehavior />
                </i:Interaction.Behaviors>
                <ItemsControl.Template>
                    <ControlTemplate TargetType="ItemsControl">
                        <ScrollViewer>
                            <ItemsPresenter />
                        </ScrollViewer>
                    </ControlTemplate>
                </ItemsControl.Template>
            </ItemsControl>

            <!--  Send Message Form  -->
            <Border
                Visibility="{Binding Path=SendMessageVisiblity, Converter={StaticResource BooleanToVisibilityConverter}}"
                CornerRadius="10"
                BorderThickness="1"
                BorderBrush="#cccccc"
                Padding="10"
                Margin="10"
                Grid.Row="2"
                Grid.Column="1">
                <Grid
                
                Visibility="{Binding Path=SendMessageVisiblity, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <TextBlock
                    FontSize="24"
                    Text="Send Message" />

                    <TextBox BorderThickness="0" FontFamily="{StaticResource Font}"  
                             Text="{Binding Message, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True}"     
                             CaretIndex="{x:Static System:Int32.MaxValue}"
                             AcceptsReturn="True" >
                        <TextBox.InputBindings>
                            <KeyBinding Key="Return" Command="{Binding SendMessageCommand}" />
                           
                        </TextBox.InputBindings>
                    </TextBox>

                    <Button
                    BorderThickness="0"
                    Grid.Column="2"
                    IsEnabled="{Binding Message, Converter={StaticResource StringToBoolConverter}}"
                    Style="{StaticResource SendButtonStyle}"
                    Command="{Binding SendMessageCommand}"
                    Content="{StaticResource SendIcon}" />
                </Grid>
            </Border>
        </Grid>
    </Grid>
</UserControl>